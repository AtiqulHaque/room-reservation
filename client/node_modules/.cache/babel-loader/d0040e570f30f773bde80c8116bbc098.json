{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React, { useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport { report, daterangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  zIndex: \"10000000\"\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article)),\n    dateChange: data => dispatch(daterangeActions.dateChange(data)),\n    focusChange: focusInput => dispatch(daterangeActions.focusChange(focusInput))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  handleChange(event) {}\n\n  componentDidMount() {//this.props.loadDashBoard();\n  }\n\n  render() {\n    console.log(this.props);\n    let cards = this.props.reservations.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          className: \"col-md-2 m-2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"hi \", val.reservation_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: val.reservation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: {\n                breakpoints: ['32em', '48em', '64em'],\n                reactDatepicker: {\n                  datepickerZIndex: 100000\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n                onDatesChange: data => this.props.loadDashBoard(),\n                onFocusChange: focusedInput => this.props.focusChange(focusedInput),\n                startDate: this.props.startDate // Date or null\n                ,\n                endDate: this.props.endDate // Date or null\n                ,\n                focusedInput: this.props.focusedInput // START_DATE, END_DATE or null\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.openModal,\n                variant: \"primary\",\n                size: \"lg\",\n                active: true,\n                children: [\"+\", \" Book Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    loading\n  } = state.report;\n  const {\n    startDate\n  } = state.report;\n  const {\n    endDate\n  } = state.report;\n  const {\n    focusedInput\n  } = state.report;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations,\n    startDate,\n    endDate,\n    focusedInput\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","useReducer","connect","Button","Card","Container","Row","Col","report","daterangeActions","DateRangeInput","ThemeProvider","style","zIndex","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","dateChange","data","focusChange","focusInput","App","Component","constructor","props","handleChange","bind","state","showModal","event","componentDidMount","render","console","log","cards","reservations","map","val","key","width","reservation_date","breakpoints","reactDatepicker","datepickerZIndex","focusedInput","startDate","endDate","openModal","mapStateToProps","loading","connectedApp"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col} from \"react-bootstrap\";\nimport {report,daterangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport {DateRangeInput} from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\n\n\nconst style = {\n    zIndex: \"10000000\",\n\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article)),\n        dateChange: data => dispatch(daterangeActions.dateChange(data)),\n        focusChange: focusInput => dispatch(daterangeActions.focusChange(focusInput))\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            showModal: false\n        };\n\n    }\n\n    handleChange(event) {\n\n    }\n\n    componentDidMount() {\n        //this.props.loadDashBoard();\n    }\n\n    render() {\n\n        console.log(this.props);\n        let cards = this.props.reservations.map((val, key) => {\n            return (\n                <React.Fragment>\n                    <Card style={{ width: '18rem' }} className='col-md-2 m-2'>\n                        <Card.Body>\n                            <Card.Title>hi {val.reservation_date}</Card.Title>\n                            <Card.Text>\n                                {val.reservation_date}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </React.Fragment>\n            )\n        });\n\n\n        return (\n            <div className='App'>\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <ThemeProvider\n                                theme={{\n                                    breakpoints: ['32em', '48em', '64em'],\n                                    reactDatepicker: {\n                                        datepickerZIndex : 100000\n                                    },\n                                }}\n                            >\n                                <DateRangeInput\n                                    onDatesChange={data => this.props.loadDashBoard()}\n                                    onFocusChange={focusedInput => this.props.focusChange(focusedInput)}\n                                    startDate={this.props.startDate} // Date or null\n                                    endDate={this.props.endDate} // Date or null\n                                    focusedInput={this.props.focusedInput} // START_DATE, END_DATE or null\n                                />\n\n                            </ThemeProvider>\n                        </Col>\n\n                        <Col>\n                            <>\n                                <Button onClick={this.openModal} variant=\"primary\" size=\"lg\" active>\n                                    {\"+\"} Book Room\n                                </Button>\n                            </>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        {cards}\n                    </Row>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const {loading} = state.report;\n    const {startDate} = state.report;\n    const {endDate} = state.report;\n    const {focusedInput} = state.report;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations,\n        startDate,\n        endDate,\n        focusedInput\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}