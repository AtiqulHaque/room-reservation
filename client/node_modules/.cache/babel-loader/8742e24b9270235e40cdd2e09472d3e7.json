{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/conversations/AddContact.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { contactActions } from \"../../_actions/contact.actions\";\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport ProfilePicture from \"./ProfilePicture\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { allSenders } from \"../../_actions/senders.action\"; //import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport axis from \"axis.js\";\nimport { NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  zIndex: \"10000000\"\n};\nlet _queryTimeout = null;\n\nconst Loading = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loading-bar-spinner\",\n    className: \"spinner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Loading;\n\nconst EachUser = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-user-list-item\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-user-list-item-inner\",\n      children: [/*#__PURE__*/_jsxDEV(ProfilePicture, {\n        user: props.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: [\" \", props.details.first_name + props.details.sur_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"type\",\n          children: props.details.user_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"meta\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.handler(props.details.user_id, props.details.user_type_id);\n          },\n          type: \"button\",\n          className: \"btn btn-sm btn-primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EachUser;\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      active: null,\n      hasMore: true\n    };\n    this.loadUsers = this.loadUsers.bind(this);\n    this.addHandler = this.addHandler.bind(this);\n    this.searchContactRef = /*#__PURE__*/React.createRef();\n  }\n\n  handleUserOnScroll() {\n    const nextPage = parseInt(this.props.users.allUserPage) + 1;\n    const searchKeyWord = this.searchContactRef.current.value;\n\n    if (searchKeyWord.length) {\n      this.props.dispatch(contactActions.searchContact(searchKeyWord, nextPage));\n    } else {\n      this.props.dispatch(contactActions.getAll(nextPage));\n    }\n\n    if (typeof this.props.users.meta !== 'undefined') {\n      if (this.props.users.items.length === this.props.users.meta.pagination.total) {\n        this.setState({\n          hasMore: false\n        });\n      }\n    }\n  }\n\n  openModal(e) {\n    e.preventDefault();\n    this.setState({\n      showModal: true\n    });\n  }\n\n  loadUsers() {\n    this.props.dispatch(contactActions.getAll(1));\n  }\n\n  addHandler(contact_id, user_type) {\n    this.props.dispatch(contactActions.addContact(contact_id, user_type, function () {\n      this.props.dispatch(allSenders.loadAllSenders(1));\n      NotificationManager.success('Success message', 'User Added successfully!!');\n      this.setState({\n        showModal: false\n      });\n    }.bind(this)));\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n\n    if (axis.isUndefined(this.searchContactRef) || !this.searchContactRef.current.value.length) {\n      this.props.dispatch(contactActions.getAll(1));\n      this.setState({\n        hasMore: true\n      });\n      return;\n    }\n\n    const searchKeyWord = this.searchContactRef.current.value;\n\n    if (_queryTimeout) {\n      window.clearTimeout(_queryTimeout);\n    }\n\n    _queryTimeout = window.setTimeout(function () {\n      this.props.dispatch(contactActions.searchContact(searchKeyWord, 1));\n    }.bind(this, allSenders, searchKeyWord), 400);\n  }\n\n  render() {\n    let users = [];\n\n    if (this.props.users.items.length) {\n      users = this.props.users.items;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"btn btn-success\",\n        onClick: e => this.openModal(e),\n        children: \" Add new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onOpened: this.loadUsers,\n        autoFocus: true,\n        backdrop: false,\n        zIndex: \"100000000\",\n        isOpen: this.state.showModal,\n        fade: false,\n        style: style,\n        className: `modal-md ${!axis.isUndefined(this.props.users.loading) && this.props.users.loading ? 'is-loading' : ''} `,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: e => this.closeModal(e),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: 'flaticon-add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), \"Available users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-height-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-contact-search\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Search contact...\",\n                onChange: e => this.handleSearch(e),\n                ref: this.searchContactRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-user-list\",\n              children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n                dataLength: this.props.users.items.length //This is important field to render the next data\n                ,\n                next: e => this.handleUserOnScroll(),\n                hasMore: this.state.hasMore,\n                loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: 'center',\n                    fontSize: '16px',\n                    fontWeight: 700\n                  },\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 49\n                }, this),\n                endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"No more contacts\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }, this),\n                height: 200,\n                children: users.map((details, key) => {\n                  return /*#__PURE__*/_jsxDEV(EachUser, {\n                    handler: this.addHandler,\n                    details: details\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 56\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(AddContact);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"EachUser\");","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/conversations/AddContact.js"],"names":["React","connect","contactActions","Button","Modal","ModalBody","ModalFooter","ModalHeader","ProfilePicture","InfiniteScroll","allSenders","axis","NotificationManager","style","zIndex","_queryTimeout","Loading","props","EachUser","details","first_name","sur_name","user_type","handler","user_id","user_type_id","AddContact","Component","constructor","state","showModal","active","hasMore","loadUsers","bind","addHandler","searchContactRef","createRef","handleUserOnScroll","nextPage","parseInt","users","allUserPage","searchKeyWord","current","value","length","dispatch","searchContact","getAll","meta","items","pagination","total","setState","openModal","e","preventDefault","contact_id","addContact","loadAllSenders","success","closeModal","handleSearch","isUndefined","window","clearTimeout","setTimeout","render","loading","textAlign","fontSize","fontWeight","map","key","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {contactActions} from \"../../_actions/contact.actions\";\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\nimport ProfilePicture from \"./ProfilePicture\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {allSenders} from \"../../_actions/senders.action\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport axis from \"axis.js\";\nimport {NotificationManager} from \"react-notifications\";\nconst style = {\n    zIndex: \"10000000\"\n};\nlet _queryTimeout = null;\n\nconst Loading = (props) => {\n    return (\n        <div id=\"loading-bar-spinner\" className=\"spinner\">\n            <div className=\"spinner-icon\"/>\n        </div>\n    )\n};\n\nconst EachUser = (props) => {\n    return (\n        <div className={\"conversation-user-list-item\"}>\n            <div className={\"conversation-user-list-item-inner\"}>\n                <ProfilePicture user={props.details}/>\n                <span className=\"user-info\">\n                    <span className=\"name\"> {props.details.first_name + props.details.sur_name}</span>\n                    <small className=\"type\">{props.details.user_type}</small>\n            </span>\n                <span className=\"meta\">\n                <button onClick={()=>{props.handler(props.details.user_id, props.details.user_type_id)}} type={\"button\"} className={\"btn btn-sm btn-primary\"}>Add</button>\n            </span>\n            </div>\n        </div>\n    );\n\n};\n\n\nclass AddContact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            active: null,\n            hasMore: true,\n        };\n        this.loadUsers = this.loadUsers.bind(this);\n        this.addHandler = this.addHandler.bind(this);\n        this.searchContactRef = React.createRef();\n    }\n\n    handleUserOnScroll() {\n        const nextPage = parseInt(this.props.users.allUserPage) + 1;\n        const searchKeyWord = this.searchContactRef.current.value;\n\n        if(searchKeyWord.length){\n            this.props.dispatch(contactActions.searchContact(searchKeyWord, nextPage));\n        }else{\n            this.props.dispatch(contactActions.getAll(nextPage));\n        }\n        if (typeof this.props.users.meta !== 'undefined') {\n            if (this.props.users.items.length === this.props.users.meta.pagination.total) {\n                this.setState({\n                    hasMore: false\n                });\n            }\n        }\n    }\n    openModal(e) {\n        e.preventDefault();\n        this.setState({\n            showModal: true\n        });\n\n    }\n\n    loadUsers() {\n        this.props.dispatch(contactActions.getAll(1));\n    }\n\n\n    addHandler(contact_id, user_type) {\n        this.props.dispatch(contactActions.addContact(contact_id, user_type, function () {\n            this.props.dispatch(allSenders.loadAllSenders(1));\n            NotificationManager.success('Success message', 'User Added successfully!!');\n            this.setState({\n                showModal: false\n            });\n        }.bind(this)));\n\n    }\n\n    closeModal() {\n        this.setState({\n            showModal: false\n        });\n    }\n    handleSearch(e){\n        e.preventDefault();\n        if(axis.isUndefined(this.searchContactRef) ||  !this.searchContactRef.current.value.length){\n            this.props.dispatch(contactActions.getAll(1));\n            this.setState({\n                hasMore: true\n            });\n            return;\n        }\n\n        const searchKeyWord = this.searchContactRef.current.value;\n\n        if (_queryTimeout) {\n            window.clearTimeout(_queryTimeout);\n        }\n\n        _queryTimeout = window.setTimeout(function(){\n            this.props.dispatch(contactActions.searchContact(searchKeyWord,1));\n        }.bind(this,allSenders,searchKeyWord),400);\n    }\n\n    render() {\n        let users = [];\n        if (this.props.users.items.length) {\n            users = this.props.users.items;\n        }\n        return (\n            <div className=\"add-button\">\n                <a href=\"#\" className=\"btn btn-success\" onClick={(e) => this.openModal(e)}> Add new</a>\n                <Modal onOpened={this.loadUsers} autoFocus={true} backdrop={false} zIndex={\"100000000\"}\n                       isOpen={this.state.showModal} fade={false}\n                       style={style} className={`modal-md ${!axis.isUndefined(this.props.users.loading) &&\n                this.props.users.loading ? 'is-loading' : ''} `}>\n\n                    <ModalHeader toggle={(e) => this.closeModal(e)}>\n                        <i className={'flaticon-add'}/>\n                        Available users\n                    </ModalHeader>\n\n                    <ModalBody>\n                        <div className=\"min-height-container\">\n                            <div className=\"add-contact-search\">\n                                <input className={\"form-control\"} type=\"text\" placeholder={\"Search contact...\"} onChange={(e)=>this.handleSearch(e)} ref={this.searchContactRef}/>\n                            </div>\n                            <div className=\"conversation-user-list\">\n                                    <InfiniteScroll\n                                        dataLength={this.props.users.items.length} //This is important field to render the next data\n                                        next={(e) => this.handleUserOnScroll()}\n                                        hasMore={this.state.hasMore}\n                                        loader={<h4 style={{textAlign: 'center', fontSize: '16px', fontWeight: 700}}>Loading...</h4>}\n                                        endMessage={\n                                            <p style={{textAlign: 'center'}}>\n                                                <b>No more contacts</b>\n                                            </p>\n                                        }\n                                        height={200}\n                                    >\n                                        {\n                                            users.map(((details, key) => {\n                                                return <EachUser key={key} handler={this.addHandler} details={details}/>\n                                            }))\n                                        }\n\n                                    </InfiniteScroll>\n                            </div>\n                        </div>\n\n                    </ModalBody>\n\n                </Modal>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(AddContact);"]},"metadata":{},"sourceType":"module"}