{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { report, dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article)),\n    dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n    focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      firstname: \"\",\n      email: \"\",\n      errors: []\n    };\n  }\n\n  handleInputChange(event) {\n    var key = event.target.name;\n    var value = event.target.value;\n    var obj = {};\n    obj[key] = value;\n    this.setState(obj);\n  }\n\n  handleChange() {\n    let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n    let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n    let date = [];\n\n    for (var m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n      date.push(m.format('YYYY-MM-DD'));\n    }\n\n    console.log(date);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //VALIDATE\n\n    var errors = []; //firstname\n\n    if (this.state.firstname === \"\") {\n      errors.push(\"firstname\");\n    } //email\n\n\n    const expression = /\\S+@\\S+/;\n    var validEmail = expression.test(String(this.state.email).toLowerCase());\n\n    if (!validEmail) {\n      errors.push(\"email\");\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (errors.length > 0) {\n      return false;\n    } else {\n      alert(\"everything good. submit form!\");\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n                theme: {\n                  reactDatepicker: {\n                    datepickerZIndex: 100000\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n                  onDatesChange: data => this.props.dateChangeFun(data),\n                  onFocusChange: focusedInput => this.props.focusChangeFun(focusedInput),\n                  startDate: this.props.startDate // Date or null\n                  ,\n                  endDate: this.props.endDate // Date or null\n                  ,\n                  focusedInput: this.props.focusedInput // START_DATE, END_DATE or null\n                  ,\n                  unavailableDates: [new Date(\"2021-09-18\")]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                children: [\"+\", \" Book Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    loading\n  } = state.report;\n  const {\n    startDate\n  } = state.daterange;\n  const {\n    endDate\n  } = state.daterange;\n  const {\n    focusedInput\n  } = state.daterange;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations,\n    startDate,\n    endDate,\n    focusedInput\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","Col","Form","report","dateRangeActions","DateRangeInput","ThemeProvider","moment","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","dateChangeFun","data","dateChange","focusChangeFun","focusInput","focusChange","App","Component","constructor","props","handleChange","bind","handleInputChange","handleSubmit","state","firstname","email","errors","event","key","target","name","value","obj","setState","startDate","format","endDate","date","m","isSameOrBefore","add","push","console","log","preventDefault","expression","validEmail","test","String","toLowerCase","length","alert","componentDidMount","render","reactDatepicker","datepickerZIndex","focusedInput","Date","mapStateToProps","loading","daterange","reservations","connectedApp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col, Form} from \"react-bootstrap\";\nimport {report,dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport {DateRangeInput} from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article)),\n        dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n        focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            firstname: \"\",\n            email: \"\",\n            errors: []\n        };\n    }\n\n    handleInputChange(event) {\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState(obj);\n    }\n\n\n    handleChange() {\n        let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n        let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n        let date = [];\n\n        for (var m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n            date.push(m.format('YYYY-MM-DD'));\n        }\n        console.log(date);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        //VALIDATE\n        var errors = [];\n\n        //firstname\n        if (this.state.firstname === \"\") {\n            errors.push(\"firstname\");\n        }\n\n        //email\n        const expression = /\\S+@\\S+/;\n        var validEmail = expression.test(String(this.state.email).toLowerCase());\n\n        if (!validEmail) {\n            errors.push(\"email\");\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        if (errors.length > 0) {\n            return false;\n        } else {\n            alert(\"everything good. submit form!\");\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    render() {\n        return (\n            <div className='App'>\n\n                <Container fluid=\"md\">\n                    <Form onSubmit={this.handleSubmit}>\n\n                        <Row>\n\n                            <Col>\n                                <ThemeProvider\n                                    theme={{\n                                        reactDatepicker: {\n                                            datepickerZIndex : 100000\n                                        }\n                                    }}\n                                >\n                                    <DateRangeInput\n                                        onDatesChange={data => this.props.dateChangeFun(data)}\n                                        onFocusChange={focusedInput => this.props.focusChangeFun(focusedInput)}\n                                        startDate={this.props.startDate} // Date or null\n                                        endDate={this.props.endDate} // Date or null\n                                        focusedInput={this.props.focusedInput} // START_DATE, END_DATE or null\n                                        unavailableDates={[new Date(\"2021-09-18\")]}\n                                    />\n\n                                </ThemeProvider>\n                            </Col>\n                            <Col>\n                                <Button type={\"submit\"}  variant=\"primary\">\n                                    {\"+\"} Book Room\n                                </Button>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                <Form.Control type=\"text\" size={\"lg\"} placeholder=\"First name\" />\n                            </Col>\n                            <Col>\n                                <Form.Control type=\"text\" size={\"lg\"} placeholder=\"Last name\" />\n                            </Col>\n\n                            <Col>\n                                <Form.Control type=\"text\"  size={\"lg\"} placeholder=\"Email\" />\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const {loading} = state.report;\n    const {startDate} = state.daterange;\n    const {endDate} = state.daterange;\n    const {focusedInput} = state.daterange;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations,\n        startDate,\n        endDate,\n        focusedInput\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}