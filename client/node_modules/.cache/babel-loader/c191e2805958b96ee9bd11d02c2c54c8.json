{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport { report, dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article)),\n    dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n    focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    //this.props.loadDashBoard();\n    console.log(new Date(this.props.startDate).toLocaleDateString('en-US'));\n  }\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  render() {\n    let cards = this.props.reservations.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          className: \"col-md-2 m-2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"hi \", val.reservation_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: val.reservation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: {\n                reactDatepicker: {\n                  datepickerZIndex: 100000\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n                onDatesChange: data => this.props.dateChangeFun(data),\n                onFocusChange: focusedInput => this.props.focusChangeFun(focusedInput),\n                startDate: this.props.startDate // Date or null\n                ,\n                endDate: this.props.endDate // Date or null\n                ,\n                focusedInput: this.props.focusedInput // START_DATE, END_DATE or null\n                ,\n                unavailableDates: [new Date(\"2021-09-18\")]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleChange,\n                variant: \"primary\",\n                size: \"lg\",\n                active: true,\n                children: [\"+\", \" Book Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    loading\n  } = state.report;\n  const {\n    startDate\n  } = state.daterange;\n  const {\n    endDate\n  } = state.daterange;\n  const {\n    focusedInput\n  } = state.daterange;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations,\n    startDate,\n    endDate,\n    focusedInput\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","Col","report","dateRangeActions","DateRangeInput","ThemeProvider","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","dateChangeFun","data","dateChange","focusChangeFun","focusInput","focusChange","App","Component","constructor","props","handleChange","bind","console","log","Date","startDate","toLocaleDateString","componentDidMount","render","cards","reservations","map","val","key","width","reservation_date","reactDatepicker","datepickerZIndex","focusedInput","endDate","mapStateToProps","state","loading","daterange","connectedApp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col} from \"react-bootstrap\";\nimport {report,dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport {DateRangeInput} from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article)),\n        dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n        focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange() {\n        //this.props.loadDashBoard();\n       console.log(new Date(this.props.startDate).toLocaleDateString('en-US'));\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    render() {\n\n        let cards = this.props.reservations.map((val, key) => {\n            return (\n                <React.Fragment>\n                    <Card style={{ width: '18rem' }} className='col-md-2 m-2'>\n                        <Card.Body>\n                            <Card.Title>hi {val.reservation_date}</Card.Title>\n                            <Card.Text>\n                                {val.reservation_date}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </React.Fragment>\n            )\n        });\n\n\n        return (\n            <div className='App'>\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <ThemeProvider\n                                theme={{\n                                    reactDatepicker: {\n                                        datepickerZIndex : 100000\n                                    }\n                                }}\n                            >\n                                <DateRangeInput\n                                    onDatesChange={data => this.props.dateChangeFun(data)}\n                                    onFocusChange={focusedInput => this.props.focusChangeFun(focusedInput)}\n                                    startDate={this.props.startDate} // Date or null\n                                    endDate={this.props.endDate} // Date or null\n                                    focusedInput={this.props.focusedInput} // START_DATE, END_DATE or null\n                                    unavailableDates={[new Date(\"2021-09-18\")]}\n                                />\n\n                            </ThemeProvider>\n                        </Col>\n\n                        <Col>\n                            <>\n                                <Button onClick={this.handleChange} variant=\"primary\" size=\"lg\" active>\n                                    {\"+\"} Book Room\n                                </Button>\n                            </>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        {cards}\n                    </Row>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const {loading} = state.report;\n    const {startDate} = state.daterange;\n    const {endDate} = state.daterange;\n    const {focusedInput} = state.daterange;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations,\n        startDate,\n        endDate,\n        focusedInput\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}