{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport { report } from \"../_actions\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  zIndex: \"10000000\"\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  handleChange(event) {}\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  openModal(e) {\n    e.preventDefault();\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    let cards = this.props.reservations.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          className: \"col-md-2 m-2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"hi \", val.reservation_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: val.reservation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleChange,\n                variant: \"primary\",\n                size: \"lg\",\n                active: true,\n                children: [\"+\", \" Book Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                autoFocus: true,\n                backdrop: false,\n                zIndex: \"100000000\",\n                isOpen: this.state.showModal,\n                fade: false,\n                style: style,\n                children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                  toggle: e => this.closeModal(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: 'flaticon-add'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 41\n                  }, this), \"Available users\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"min-height-container\",\n                    children: \"Hello\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  const {\n    loading\n  } = state.report;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","Col","report","Modal","ModalBody","ModalFooter","ModalHeader","style","zIndex","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","App","Component","constructor","props","handleChange","bind","state","showModal","event","componentDidMount","openModal","e","preventDefault","setState","closeModal","render","cards","reservations","map","val","key","width","reservation_date","mapStateToProps","console","log","loading","connectedApp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col} from \"react-bootstrap\";\nimport {report} from \"../_actions\";\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\n\nconst style = {\n    zIndex: \"10000000\"\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article))\n    };\n}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            showModal: false\n        };\n\n    }\n\n    handleChange(event) {\n\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    openModal(e) {\n        e.preventDefault();\n        this.setState({\n            showModal: true\n        });\n\n    }\n\n    closeModal() {\n        this.setState({\n            showModal: false\n        });\n    }\n\n    render() {\n\n        let cards = this.props.reservations.map((val, key) => {\n            return (\n                <React.Fragment>\n                    <Card style={{ width: '18rem' }} className='col-md-2 m-2'>\n                        <Card.Body>\n                            <Card.Title>hi {val.reservation_date}</Card.Title>\n                            <Card.Text>\n                                {val.reservation_date}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </React.Fragment>\n            )\n        });\n\n\n        return (\n            <div className='App'>\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <>\n                                <Button onClick={this.handleChange} variant=\"primary\" size=\"lg\" active>\n                                    {\"+\"} Book Room\n                                </Button>\n\n                                <Modal  autoFocus={true} backdrop={false} zIndex={\"100000000\"}\n                                       isOpen={this.state.showModal} fade={false}\n                                       style={style}>\n\n                                    <ModalHeader toggle={(e) => this.closeModal(e)}>\n                                        <i className={'flaticon-add'}/>\n                                        Available users\n                                    </ModalHeader>\n\n                                    <ModalBody>\n                                        <div className=\"min-height-container\">\n                                            Hello\n                                        </div>\n\n                                    </ModalBody>\n\n                                </Modal>\n                            </>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        {cards}\n                    </Row>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    console.log(state);\n    const {loading} = state.report;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}