{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row } from \"react-bootstrap\";\nimport { report } from \"../_actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {}\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  render() {\n    let cards = this.props.reservations.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          className: \"col-md-2 m-2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"hi \", val.reservation_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: val.reservation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"col\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              id: \"title\",\n              className: \"btn btn-primary\",\n              value: \"Click me\",\n              onClick: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  const {\n    loading\n  } = state.report;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","report","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","App","Component","constructor","props","handleChange","bind","event","componentDidMount","render","cards","reservations","map","val","key","width","reservation_date","mapStateToProps","state","console","log","loading","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,2CAAP;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA2C,iBAA3C;AACA,SAAQC,MAAR,QAAqB,aAArB;;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,aAAa,EAAEC,OAAO,IAAIF,QAAQ,CAACF,MAAM,CAACK,aAAP,CAAqBD,OAArB,CAAD;AAD/B,GAAP;AAGH;;AAGD,MAAME,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ,CAEnB;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWN,aAAX;AACH;;AAEDW,EAAAA,MAAM,GAAG;AAEL,QAAIC,KAAK,GAAG,KAAKN,KAAL,CAAWO,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAiC,UAAA,SAAS,EAAC,cAA3C;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAgBF,GAAG,CAACG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,wBACKH,GAAG,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAbW,CAAZ;AAgBA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEI,QAAC,SAAD;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI;AAAA,mCACI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,OAFP;AAGI,cAAA,SAAS,EAAE,iBAHf;AAII,cAAA,KAAK,EAAC,UAJV;AAKI,cAAA,OAAO,EAAE,KAAKX;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,GAAD;AAAA,oBACKK;AADL;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAxD6B;;AA4DlC,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAACG,IAAAA;AAAD,MAAYH,KAAK,CAACvB,MAAxB;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAiBO,KAAK,CAACvB,MAA7B;AACA,SAAO;AACH0B,IAAAA,OADG;AAEHV,IAAAA;AAFG,GAAP;AAIH;;AAED,MAAMW,YAAY,GAAGhC,OAAO,CAAC2B,eAAD,EAAkBrB,kBAAlB,CAAP,CAA6CK,GAA7C,CAArB;AACA,SAAQqB,YAAY,IAAIrB,GAAxB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row} from \"react-bootstrap\";\nimport {report} from \"../_actions\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article))\n    };\n}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    render() {\n\n        let cards = this.props.reservations.map((val, key) => {\n            return (\n                <React.Fragment>\n                    <Card style={{ width: '18rem' }} className='col-md-2 m-2'>\n                        <Card.Body>\n                            <Card.Title>hi {val.reservation_date}</Card.Title>\n                            <Card.Text>\n                                {val.reservation_date}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </React.Fragment>\n            )\n        });\n\n\n        return (\n            <div className='App'>\n\n                <Container>\n                    <Row>\n                        <col>\n                            <input\n                                type=\"button\"\n                                id=\"title\"\n                                className={\"btn btn-primary\"}\n                                value=\"Click me\"\n                                onClick={this.handleChange}\n                            />\n                        </col>\n\n                    </Row>\n\n                    <Row>\n                        {cards}\n                    </Row>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    console.log(state);\n    const {loading} = state.report;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}