{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/ComposeMessage.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { conversation } from '../_actions';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Form from \"react-validation/build/form\";\nimport Input from 'react-validation/build/input';\nimport Textarea from 'react-validation/build/textarea';\nimport VButton from 'react-validation/build/button';\nimport axis from \"axis.js\";\nimport axios from 'axios';\nimport Tooltip from '@atlaskit/tooltip';\nimport { components } from 'react-select';\nimport Async from 'react-select/lib/Async';\nimport Config from \"./Config\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport { authHeader, handleResponse } from '../_helpers';\nimport { NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  zIndex: \"10000000\"\n};\n\nconst required = (value, props) => {\n  if (!value.toString().trim().length) {\n    // We can return string or jsx as the 'error' prop for the validated Component\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: [\"Field \", props.name, \" Required\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n};\n\nconst LoadingMessage = props => {\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: 'Custom Loading Message',\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...props.innerProps,\n      style: props.getStyles('loadingMessage', props),\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoadingMessage;\nlet _queryTimeout = null;\n\nconst loadOptions = (inputValue, callback) => {\n  if (axis.isUndefined(inputValue)) {\n    return;\n  }\n\n  if (_queryTimeout) {\n    window.clearTimeout(_queryTimeout);\n  }\n\n  _queryTimeout = window.setTimeout(function () {\n    axios.get(Config.serverURL + `/team/search/sender?query=${inputValue}`, {\n      headers: authHeader()\n    }).then(response => {\n      var formatedResults = response.data.payload.data.map(x => {\n        let picture = null;\n\n        if (!axis.isUndefined(x.sender.data.picture)) {\n          picture = x.sender.data.picture.data.file;\n        }\n\n        return {\n          value: x.sender.data.user_id,\n          label: x.sender.data.first_name + \" \" + x.sender.data.sur_name,\n          img: picture\n        };\n      });\n      callback(formatedResults);\n    });\n  }.bind(this), 300);\n};\n\nconst NoImage = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"select2-no-image\",\n    children: props.name.charAt(0)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = NoImage;\n\nconst Image = props => {\n  let src = props.file.replace('.test', '.com');\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"select2-user-img\",\n    src: src\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Image;\n\nconst Option = props => {\n  const {\n    data\n  } = props;\n\n  let img = /*#__PURE__*/_jsxDEV(NoImage, {\n    name: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 15\n  }, this);\n\n  if (!axis.isNull(data.img)) {\n    img = /*#__PURE__*/_jsxDEV(Image, {\n      file: data.img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n    children: [img, data.label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Option;\n\nconst SingleValue = props => {\n  const {\n    data\n  } = props;\n  let img = null;\n\n  if (!axis.isNull(data.img)) {\n    img = data.img.replace('.test', '.com');\n  }\n\n  return /*#__PURE__*/_jsxDEV(components.SingleValue, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: '',\n      className: \"select2-user-img\",\n      src: img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = SingleValue;\n\nclass ComposeMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = newValue => {\n      const inputValue = newValue.replace(/\\W/g, '');\n      this.setState({\n        inputValue\n      });\n      return inputValue;\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedValue: selectedOption\n      });\n    };\n\n    this.removeBodyError = () => {\n      this.form.hideError(this.body);\n    };\n\n    this.removeSubjectError = () => {\n      this.form.hideError(this.subject);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (axis.isUndefined(this.state.selectedValue.value)) {\n        return;\n      }\n\n      this.props.dispatch(conversation.messageSending());\n      var formData = new FormData();\n\n      for (const key of Object.keys(this.state.imgCollection)) {\n        formData.append('attachments[]', this.state.imgCollection[key]);\n      }\n\n      let formValues = this.form.getValues();\n      formData.set('sender_id', this.state.selectedValue.value);\n      formData.set('title', formValues.subject);\n      formData.set('message', this.state.editorValue);\n      formData.set('status', '0');\n      formData.set('communication_type', '1');\n      axios.post(Config.serverURL + \"/team/conversations/save\", formData, {\n        headers: authHeader()\n      }).then(res => {\n        this.props.dispatch(conversation.loadAllSenderConversations(this.state.selectedValue.value));\n        this.props.dispatch(conversation.messageSent());\n        NotificationManager.success('Success message', 'Message sent successfully!!');\n        this.closeModal();\n      });\n    };\n\n    this.handleEditorChange = (content, editor) => {\n      this.setState({\n        editorValue: content\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      imgCollection: '',\n      options: [],\n      value: {},\n      editorValue: '',\n      selectedValue: {}\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onFileChange(e) {\n    this.setState({\n      imgCollection: e.target.files\n    });\n  }\n\n  openModal(e) {\n    e.preventDefault();\n    this.props.dispatch(conversation.showComposeModal(false));\n  }\n\n  closeModal() {\n    this.setState({\n      selectedValue: {}\n    });\n    this.props.dispatch(conversation.hideComposeModal());\n  }\n\n  getSenderInput() {\n    if (!axis.isUndefined(this.props.conversation.isReply) && this.props.conversation.isReply) {\n      let sender = null,\n          newMessage = false;\n\n      if (!axis.isUndefined(this.props.conversation.sendTo)) {\n        sender = this.props.conversation.sendTo;\n        newMessage = true;\n      } else {\n        sender = this.props.conversation.receivers[0].sender.data;\n      }\n\n      if (!this.state.selectedValue.hasOwnProperty('value')) {\n        this.setState({\n          selectedValue: {\n            value: sender.user_id,\n            label: `${sender.first_name} ${sender.sur_name}`,\n            img: null\n          }\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"conversation-reply-title\",\n        children: [newMessage ? 'Send Message' : 'Reply', \" to: \", sender.first_name, \" \", sender.sur_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Async, {\n        isClearable: true,\n        cacheOptions: true,\n        styles: {\n          singleValue: base => ({ ...base,\n            padding: 5,\n            borderRadius: 5,\n            display: 'flex',\n            height: 38,\n            top: 5,\n            transform: 'none'\n          })\n        },\n        loadOptions: loadOptions,\n        onChange: this.handleChange,\n        onInputChange: this.handleInputChange,\n        components: {\n          LoadingMessage,\n          Option,\n          SingleValue\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  hideDetails(e) {\n    e.preventDefault();\n    this.props.dispatch(conversation.hideDetails());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compose-btn\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        autoFocus: true,\n        backdrop: false,\n        zIndex: \"100000000\",\n        isOpen: this.props.conversation.showComposeModal,\n        fade: false,\n        style: style,\n        className: `modal-lg compose-message-modal ${!axis.isUndefined(this.props.conversation.message_sending) && this.props.conversation.message_sending ? 'is-loading' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          ref: c => {\n            this.form = c;\n          },\n          onSubmit: e => {\n            this.handleSubmit(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: e => this.closeModal(e),\n            children: [\"Compose Message\", this.props.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: this.getSenderInput()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onFocus: this.removeSubjectError,\n                ref: c => {\n                  this.subject = c;\n                },\n                placeholder: \"Enter subject\",\n                className: \"form-control\",\n                name: \"subject\",\n                validations: [required]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                apiKey: \"eyd853fvaxhszn83elarxhqkthxv7adef0glf0xh63jxhwft\",\n                initialValue: \"<p>Write email body here.....</p>\",\n                init: {\n                  height: 300,\n                  menubar: false,\n                  plugins: ['advlist autolink lists link charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime  table paste wordcount'],\n                  toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                                            alignleft aligncenter alignright alignjustify | \\\n                                            bullist numlist outdent indent | removeformat'\n                },\n                onEditorChange: this.handleEditorChange,\n                onInit: () => {\n                  console.log(\"loading....\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputFile\",\n                children: \"Attachments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"imgCollection\",\n                onChange: this.onFileChange,\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center align-items-center w-100\",\n              children: [/*#__PURE__*/_jsxDEV(VButton, {\n                type: \"submit\",\n                value: \"Submit\",\n                color: \"primary\",\n                className: \"btn btn-primary mr-2\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn btn-default\",\n                color: \"secondary\",\n                onClick: e => this.closeModal(e),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  conversation: state.conversation\n}))(ComposeMessage);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"LoadingMessage\");\n$RefreshReg$(_c2, \"NoImage\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Option\");\n$RefreshReg$(_c5, \"SingleValue\");","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/ComposeMessage.js"],"names":["React","connect","conversation","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","Input","Textarea","VButton","axis","axios","Tooltip","components","Async","Config","Editor","authHeader","handleResponse","NotificationManager","style","zIndex","required","value","props","toString","trim","length","name","LoadingMessage","innerProps","getStyles","children","_queryTimeout","loadOptions","inputValue","callback","isUndefined","window","clearTimeout","setTimeout","get","serverURL","headers","then","response","formatedResults","data","payload","map","x","picture","sender","file","user_id","label","first_name","sur_name","img","bind","NoImage","charAt","Image","src","replace","Option","isNull","SingleValue","ComposeMessage","Component","constructor","handleInputChange","newValue","setState","handleChange","selectedOption","selectedValue","removeBodyError","form","hideError","body","removeSubjectError","subject","handleSubmit","e","preventDefault","state","dispatch","messageSending","formData","FormData","key","Object","keys","imgCollection","append","formValues","getValues","set","editorValue","post","res","loadAllSenderConversations","messageSent","success","closeModal","handleEditorChange","content","editor","showModal","options","onFileChange","target","files","openModal","showComposeModal","hideComposeModal","getSenderInput","isReply","newMessage","sendTo","receivers","hasOwnProperty","singleValue","base","padding","borderRadius","display","height","top","transform","hideDetails","render","message_sending","c","title","menubar","plugins","toolbar","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {conversation} from '../_actions';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport Form from \"react-validation/build/form\";\nimport Input from 'react-validation/build/input';\nimport Textarea from 'react-validation/build/textarea';\nimport VButton from 'react-validation/build/button';\nimport axis from \"axis.js\";\nimport axios from 'axios';\nimport Tooltip from '@atlaskit/tooltip';\nimport {components} from 'react-select';\nimport Async from 'react-select/lib/Async';\nimport Config from \"./Config\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport {authHeader, handleResponse} from '../_helpers';\nimport {NotificationManager} from \"react-notifications\";\n\nconst style = {\n    zIndex: \"10000000\"\n};\n\n\nconst required = (value, props) => {\n    if (!value.toString().trim().length) {\n        // We can return string or jsx as the 'error' prop for the validated Component\n        return <span className=\"error\">Field {props.name} Required</span>\n    }\n};\n\n\nconst LoadingMessage = props => {\n    return (\n        <Tooltip content={'Custom Loading Message'}>\n            <div\n                {...props.innerProps}\n                style={props.getStyles('loadingMessage', props)}\n            >\n                {props.children}\n            </div>\n        </Tooltip>\n    );\n};\n\nlet _queryTimeout = null;\nconst loadOptions = (inputValue, callback) => {\n    if (axis.isUndefined(inputValue)) {\n        return;\n    }\n\n\n    if (_queryTimeout) {\n        window.clearTimeout(_queryTimeout);\n    }\n\n    _queryTimeout = window.setTimeout(function(){\n        axios.get(Config.serverURL + `/team/search/sender?query=${inputValue}`, {headers: authHeader()})\n            .then((response) => {\n\n                var formatedResults = response.data.payload.data.map((x) => {\n                    let picture = null;\n\n                    if (!axis.isUndefined(x.sender.data.picture)) {\n                        picture = x.sender.data.picture.data.file;\n                    }\n\n                    return {\n                        value: x.sender.data.user_id,\n                        label: x.sender.data.first_name + \" \" + x.sender.data.sur_name,\n                        img: picture\n                    }\n                });\n                callback(formatedResults);\n            });\n\n    }.bind(this), 300);\n\n};\n\nconst NoImage = (props) => {\n    return (\n        <p className={\"select2-no-image\"}>{props.name.charAt(0)}</p>\n    )\n};\n\nconst Image = (props) => {\n    let src = props.file.replace('.test', '.com');\n    return (\n        <img className={\"select2-user-img\"} src={src}/>\n    )\n};\n\nconst Option = props => {\n    const {data} = props;\n\n    let img = <NoImage name={data.label}/>;\n\n    if (!axis.isNull(data.img)) {\n        img = <Image file={data.img}/>\n    }\n    return (\n        <components.Option {...props}>\n            {img}\n            {data.label}\n        </components.Option>\n    );\n};\n\nconst SingleValue = props => {\n    const {data} = props;\n    let img = null;\n    if (!axis.isNull(data.img)) {\n        img = data.img.replace('.test', '.com')\n    }\n    return (\n        <components.SingleValue {...props}>\n            <img alt={''} className={\"select2-user-img\"} src={img}/>\n            <div>{data.label}</div>\n        </components.SingleValue>\n    );\n};\n\nclass ComposeMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            imgCollection: '',\n            options: [],\n            value: {},\n            editorValue : '',\n            selectedValue: {}\n        };\n        this.onFileChange = this.onFileChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleInputChange = (newValue) => {\n        const inputValue = newValue.replace(/\\W/g, '');\n        this.setState({inputValue});\n        return inputValue;\n    };\n\n    handleChange = (selectedOption) => {\n        this.setState({\n            selectedValue: selectedOption\n        });\n    };\n\n    onFileChange(e) {\n        this.setState({imgCollection: e.target.files})\n    }\n\n    openModal(e) {\n        e.preventDefault();\n        this.props.dispatch(conversation.showComposeModal(false));\n    }\n\n    closeModal() {\n        this.setState({\n            selectedValue:{}\n        });\n        this.props.dispatch(conversation.hideComposeModal());\n    }\n\n    removeBodyError = () => {\n        this.form.hideError(this.body);\n    };\n\n    removeSubjectError = () => {\n        this.form.hideError(this.subject);\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (axis.isUndefined(this.state.selectedValue.value)) {\n            return;\n        }\n        this.props.dispatch(conversation.messageSending());\n        var formData = new FormData();\n\n        for (const key of Object.keys(this.state.imgCollection)) {\n            formData.append('attachments[]', this.state.imgCollection[key])\n        }\n\n        let formValues = this.form.getValues();\n        formData.set('sender_id', this.state.selectedValue.value);\n        formData.set('title', formValues.subject);\n        formData.set('message', this.state.editorValue);\n        formData.set('status', '0');\n        formData.set('communication_type', '1');\n        axios.post(Config.serverURL + \"/team/conversations/save\", formData, {headers: authHeader()}).then(res => {\n\n            this.props.dispatch(conversation.loadAllSenderConversations(this.state.selectedValue.value));\n            this.props.dispatch(conversation.messageSent());\n            NotificationManager.success('Success message', 'Message sent successfully!!');\n            this.closeModal();\n        })\n    };\n\n    handleEditorChange = (content, editor) => {\n        this.setState({\n            editorValue : content\n        })\n    };\n    getSenderInput(){\n        if(!axis.isUndefined(this.props.conversation.isReply) && this.props.conversation.isReply){\n            let sender = null,\n                newMessage = false;\n            if(!axis.isUndefined(this.props.conversation.sendTo)){\n                sender = this.props.conversation.sendTo;\n                newMessage = true;\n            }else{\n                sender = this.props.conversation.receivers[0].sender.data;\n            }\n            if(!this.state.selectedValue.hasOwnProperty('value')){\n                this.setState({\n                    selectedValue:{\n                        value: sender.user_id,\n                        label: `${sender.first_name} ${sender.sur_name}`,\n                        img:null\n                    }\n                });\n            }\n            return (\n              <h4 className=\"conversation-reply-title\">\n                  { newMessage ? 'Send Message' : 'Reply' } to: {sender.first_name} {sender.sur_name}\n              </h4>\n            );\n        }else{\n            return (<Async\n                isClearable={true}\n                cacheOptions\n                styles={\n                    {\n                        singleValue: (base) => ({\n                            ...base,\n                            padding: 5,\n                            borderRadius: 5,\n                            display: 'flex',\n                            height:38,\n                            top:5,\n                            transform:'none',\n                        })\n                    }\n                }\n                loadOptions={loadOptions}\n                onChange={this.handleChange}\n                onInputChange={this.handleInputChange}\n                components={{LoadingMessage, Option, SingleValue}}\n            />)\n        }\n    }\n    hideDetails(e){\n        e.preventDefault();\n        this.props.dispatch(conversation.hideDetails());\n    }\n    render() {\n        return (\n            <div className=\"compose-btn\">\n                <Modal autoFocus={true} backdrop={false} zIndex={\"100000000\"}\n                       isOpen={this.props.conversation.showComposeModal} fade={false}\n                       style={style} className={`modal-lg compose-message-modal ${!axis.isUndefined(this.props.conversation.message_sending) &&\n                this.props.conversation.message_sending ? 'is-loading' : ''}`}>\n                    <Form ref={c => {\n                        this.form = c\n                    }} onSubmit={(e) => {\n                        this.handleSubmit(e)\n                    }}>\n                        <ModalHeader toggle={(e) => this.closeModal(e)}>\n                           Compose Message\n                            {this.props.title}\n                        </ModalHeader>\n\n                        <ModalBody>\n\n                            <div className=\"form-group\">\n                                {this.getSenderInput()}\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <Input onFocus={this.removeSubjectError} ref={c => {\n                                    this.subject = c\n                                }} placeholder=\"Enter subject\" className=\"form-control\" name='subject'\n                                       validations={[required]}/>\n                            </div>\n                            <div className=\"form-group\">\n                                {/*<Textarea onFocus={this.removeBodyError} ref={c => {*/}\n                                {/*    this.body = c*/}\n                                {/*}} className=\"form-control\" rows=\"3\" placeholder=\"Enter message\" name='body'*/}\n                                {/*          validations={[required]}/>*/}\n\n\n                                <Editor\n                                    apiKey='eyd853fvaxhszn83elarxhqkthxv7adef0glf0xh63jxhwft'\n                                    initialValue=\"<p>Write email body here.....</p>\"\n                                    init={{\n                                        height: 300,\n                                        menubar: false,\n                                        plugins: [\n                                            'advlist autolink lists link charmap print preview anchor',\n                                            'searchreplace visualblocks code fullscreen',\n                                            'insertdatetime  table paste wordcount'\n                                        ],\n                                        toolbar:\n                                            'undo redo | formatselect | bold italic backcolor | \\\n                                            alignleft aligncenter alignright alignjustify | \\\n                                            bullist numlist outdent indent | removeformat'\n                                    }}\n                                    onEditorChange={this.handleEditorChange}\n                                    onInit={()=>{console.log(\"loading....\")}}\n                                />\n\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputFile\">Attachments</label>\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple/>\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            <div className=\"d-flex justify-content-center align-items-center w-100\">\n                                <VButton type=\"submit\" value=\"Submit\" color=\"primary\"\n                                         className=\"btn btn-primary mr-2\">Submit</VButton>\n\n                                <Button className=\"btn btn-default\" color=\"secondary\"\n                                        onClick={(e) => this.closeModal(e)}>Cancel</Button>\n\n                            </div>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n            </div>\n\n        );\n    }\n}\n\nexport default connect( state => ({\n    conversation: state.conversation\n}))(ComposeMessage);"]},"metadata":{},"sourceType":"module"}