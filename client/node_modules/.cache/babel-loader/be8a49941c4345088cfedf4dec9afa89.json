{"ast":null,"code":"import { reportConstants } from '../_constants';\nimport axis from \"axis.js\";\nconst initialState = {\n  loading: false,\n  reportData: [],\n  reportGraphData: [],\n  currentYear: new Date().getFullYear()\n};\n\nconst processMonthWiseData = graphData => {\n  let groupByYear = {};\n  graphData.map(eachData => {\n    if (axis.isUndefined(groupByYear[eachData.year])) {\n      groupByYear[eachData.year] = [eachData];\n    } else {\n      groupByYear[eachData.year].push(eachData);\n    }\n  });\n  return groupByYear;\n};\n\nexport function report(state = initialState, action) {\n  switch (action.type) {\n    case reportConstants.LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload\n      });\n\n    case reportConstants.CHANGE_YEAR:\n      return Object.assign({}, state, {\n        currentYear: action.payload\n      });\n\n    case reportConstants.REPORT_SUCCESS:\n      return Object.assign({}, state, {\n        reportData: [action.payload.report_box],\n        reportGraphData: [processMonthWiseData(action.payload.report_graph)],\n        currentYear: new Date().getFullYear()\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/_reducers/report.reducer.js"],"names":["reportConstants","axis","initialState","loading","reportData","reportGraphData","currentYear","Date","getFullYear","processMonthWiseData","graphData","groupByYear","map","eachData","isUndefined","year","push","report","state","action","type","LOADING","Object","assign","payload","CHANGE_YEAR","REPORT_SUCCESS","report_box","report_graph"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,eAA9B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,WAAW,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAJI,CAArB;;AAOA,MAAMC,oBAAoB,GAAIC,SAAD,IAAe;AACxC,MAAIC,WAAW,GAAG,EAAlB;AAEAD,EAAAA,SAAS,CAACE,GAAV,CAAeC,QAAD,IAAc;AACxB,QAAIZ,IAAI,CAACa,WAAL,CAAiBH,WAAW,CAACE,QAAQ,CAACE,IAAV,CAA5B,CAAJ,EAAkD;AAC9CJ,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX,GAA6B,CAACF,QAAD,CAA7B;AACH,KAFD,MAEO;AACHF,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX,CAA2BC,IAA3B,CAAgCH,QAAhC;AACH;AACJ,GAND;AAQA,SAAOF,WAAP;AACH,CAZD;;AAeA,OAAO,SAASM,MAAT,CAAgBC,KAAK,GAAGhB,YAAxB,EAAsCiB,MAAtC,EAA8C;AACjD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKpB,eAAe,CAACqB,OAArB;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5Bf,QAAAA,OAAO,EAAEgB,MAAM,CAACK;AADY,OAAzB,CAAP;;AAGJ,SAAKxB,eAAe,CAACyB,WAArB;AACI,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BZ,QAAAA,WAAW,EAAEa,MAAM,CAACK;AADQ,OAAzB,CAAP;;AAIJ,SAAKxB,eAAe,CAAC0B,cAArB;AACI,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5Bd,QAAAA,UAAU,EAAE,CAACe,MAAM,CAACK,OAAP,CAAeG,UAAhB,CADgB;AAE5BtB,QAAAA,eAAe,EAAE,CAACI,oBAAoB,CAACU,MAAM,CAACK,OAAP,CAAeI,YAAhB,CAArB,CAFW;AAG5BtB,QAAAA,WAAW,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAHe,OAAzB,CAAP;;AAKJ;AACI,aAAOU,KAAP;AAlBR;AAoBH","sourcesContent":["import {reportConstants} from '../_constants';\nimport axis from \"axis.js\";\n\nconst initialState = {\n    loading: false,\n    reportData: [],\n    reportGraphData: [],\n    currentYear: new Date().getFullYear()\n};\n\nconst processMonthWiseData = (graphData) => {\n    let groupByYear = {};\n\n    graphData.map((eachData) => {\n        if (axis.isUndefined(groupByYear[eachData.year])) {\n            groupByYear[eachData.year] = [eachData];\n        } else {\n            groupByYear[eachData.year].push(eachData);\n        }\n    });\n\n    return groupByYear;\n};\n\n\nexport function report(state = initialState, action) {\n    switch (action.type) {\n\n        case reportConstants.LOADING:\n            return Object.assign({}, state, {\n                loading: action.payload,\n            });\n        case reportConstants.CHANGE_YEAR:\n            return Object.assign({}, state, {\n                currentYear: action.payload,\n            });\n\n        case reportConstants.REPORT_SUCCESS:\n            return Object.assign({}, state, {\n                reportData: [action.payload.report_box],\n                reportGraphData: [processMonthWiseData(action.payload.report_graph)],\n                currentYear: new Date().getFullYear()\n            });\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}