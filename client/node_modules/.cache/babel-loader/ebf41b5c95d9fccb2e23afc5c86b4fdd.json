{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { report, dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(report.loadDashboard(article)),\n    dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n    focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      firstname: \"\",\n      email: \"\",\n      errors: []\n    };\n  }\n\n  handleChange() {\n    let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n    let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n    let date = [];\n\n    for (var m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n      date.push(m.format('YYYY-MM-DD'));\n    }\n\n    console.log(date);\n  }\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  render() {\n    let cards = this.props.reservations.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          className: \"col-md-2 m-2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"hi \", val.reservation_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: val.reservation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n                theme: {\n                  reactDatepicker: {\n                    datepickerZIndex: 100000\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n                  onDatesChange: data => this.props.dateChangeFun(data),\n                  onFocusChange: focusedInput => this.props.focusChangeFun(focusedInput),\n                  startDate: this.props.startDate // Date or null\n                  ,\n                  endDate: this.props.endDate // Date or null\n                  ,\n                  focusedInput: this.props.focusedInput // START_DATE, END_DATE or null\n                  ,\n                  unavailableDates: [new Date(\"2021-09-18\")]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleChange,\n                variant: \"primary\",\n                children: [\"+\", \" Book Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    loading\n  } = state.report;\n  const {\n    startDate\n  } = state.daterange;\n  const {\n    endDate\n  } = state.daterange;\n  const {\n    focusedInput\n  } = state.daterange;\n  const {\n    reservations\n  } = state.report;\n  return {\n    loading,\n    reservations,\n    startDate,\n    endDate,\n    focusedInput\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","Col","Form","report","dateRangeActions","DateRangeInput","ThemeProvider","moment","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","dateChangeFun","data","dateChange","focusChangeFun","focusInput","focusChange","App","Component","constructor","props","handleChange","bind","state","firstname","email","errors","startDate","format","endDate","date","m","isSameOrBefore","add","push","console","log","componentDidMount","render","cards","reservations","map","val","key","width","reservation_date","reactDatepicker","datepickerZIndex","focusedInput","Date","mapStateToProps","loading","daterange","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,2CAAP;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,GAAjC,EAAqCC,GAArC,EAA0CC,IAA1C,QAAqD,iBAArD;AACA,SAAQC,MAAR,EAAeC,gBAAf,QAAuC,aAAvC;AACA,OAAO,eAAP;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,aAAa,EAAEC,OAAO,IAAIF,QAAQ,CAACN,MAAM,CAACS,aAAP,CAAqBD,OAArB,CAAD,CAD/B;AAEHE,IAAAA,aAAa,EAAEC,IAAI,IAAIL,QAAQ,CAACL,gBAAgB,CAACW,UAAjB,CAA4BD,IAA5B,CAAD,CAF5B;AAGHE,IAAAA,cAAc,EAAEC,UAAU,IAAIR,QAAQ,CAACL,gBAAgB,CAACc,WAAjB,CAA6BD,UAA7B,CAAD;AAHnC,GAAP;AAKH;;AAED,MAAME,GAAN,SAAkBxB,KAAK,CAACyB,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDL,EAAAA,YAAY,GAAG;AACX,QAAIM,SAAS,GAAGtB,MAAM,CAAC,KAAKe,KAAL,CAAWO,SAAZ,CAAN,CAA6BC,MAA7B,CAAoC,YAApC,CAAhB;AACA,QAAIC,OAAO,GAAGxB,MAAM,CAAC,KAAKe,KAAL,CAAWS,OAAZ,CAAN,CAA2BD,MAA3B,CAAkC,YAAlC,CAAd;AACA,QAAIE,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG1B,MAAM,CAACsB,SAAD,CAAnB,EAAgCI,CAAC,CAACC,cAAF,CAAiBH,OAAjB,CAAhC,EAA2DE,CAAC,CAACE,GAAF,CAAM,CAAN,EAAS,MAAT,CAA3D,EAA6E;AACzEH,MAAAA,IAAI,CAACI,IAAL,CAAUH,CAAC,CAACH,MAAF,CAAS,YAAT,CAAV;AACH;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,KAAL,CAAWZ,aAAX;AACH;;AAED8B,EAAAA,MAAM,GAAG;AAEL,QAAIC,KAAK,GAAG,KAAKnB,KAAL,CAAWoB,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAiC,UAAA,SAAS,EAAC,cAA3C;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAgBF,GAAG,CAACG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,wBACKH,GAAG,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAbW,CAAZ;AAgBA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,IAAjB;AAAA,+BACI,QAAC,IAAD;AAAA,kCAEI,QAAC,GAAD;AAAA,oCAEI,QAAC,GAAD;AAAA,qCACI,QAAC,aAAD;AACI,gBAAA,KAAK,EAAE;AACHC,kBAAAA,eAAe,EAAE;AACbC,oBAAAA,gBAAgB,EAAG;AADN;AADd,iBADX;AAAA,uCAOI,QAAC,cAAD;AACI,kBAAA,aAAa,EAAEnC,IAAI,IAAI,KAAKQ,KAAL,CAAWT,aAAX,CAAyBC,IAAzB,CAD3B;AAEI,kBAAA,aAAa,EAAEoC,YAAY,IAAI,KAAK5B,KAAL,CAAWN,cAAX,CAA0BkC,YAA1B,CAFnC;AAGI,kBAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWO,SAH1B,CAGqC;AAHrC;AAII,kBAAA,OAAO,EAAE,KAAKP,KAAL,CAAWS,OAJxB,CAIiC;AAJjC;AAKI,kBAAA,YAAY,EAAE,KAAKT,KAAL,CAAW4B,YAL7B,CAK2C;AAL3C;AAMI,kBAAA,gBAAgB,EAAE,CAAC,IAAIC,IAAJ,CAAS,YAAT,CAAD;AANtB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAqBI,QAAC,GAAD;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,KAAK5B,YAAtB;AAAoC,gBAAA,OAAO,EAAC,SAA5C;AAAA,2BACK,GADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eA+BI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,IAAI,EAAE,IAAhC;AAAsC,gBAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,GAAD;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,IAAI,EAAE,IAAhC;AAAsC,gBAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAQI,QAAC,GAAD;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA2B,gBAAA,IAAI,EAAE,IAAjC;AAAuC,gBAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqDH;;AAjG6B;;AAqGlC,SAAS6B,eAAT,CAAyB3B,KAAzB,EAAgC;AAC5B,QAAM;AAAC4B,IAAAA;AAAD,MAAY5B,KAAK,CAACtB,MAAxB;AACA,QAAM;AAAC0B,IAAAA;AAAD,MAAcJ,KAAK,CAAC6B,SAA1B;AACA,QAAM;AAACvB,IAAAA;AAAD,MAAYN,KAAK,CAAC6B,SAAxB;AACA,QAAM;AAACJ,IAAAA;AAAD,MAAiBzB,KAAK,CAAC6B,SAA7B;AACA,QAAM;AAACZ,IAAAA;AAAD,MAAiBjB,KAAK,CAACtB,MAA7B;AACA,SAAO;AACHkD,IAAAA,OADG;AAEHX,IAAAA,YAFG;AAGHb,IAAAA,SAHG;AAIHE,IAAAA,OAJG;AAKHmB,IAAAA;AALG,GAAP;AAOH;;AAED,MAAMK,YAAY,GAAG3D,OAAO,CAACwD,eAAD,EAAkB5C,kBAAlB,CAAP,CAA6CW,GAA7C,CAArB;AACA,SAAQoC,YAAY,IAAIpC,GAAxB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col, Form} from \"react-bootstrap\";\nimport {report,dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport {DateRangeInput} from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(report.loadDashboard(article)),\n        dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n        focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput))\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            firstname: \"\",\n            email: \"\",\n            errors: []\n        };\n    }\n\n    handleChange() {\n        let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n        let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n        let date = [];\n\n        for (var m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n            date.push(m.format('YYYY-MM-DD'));\n        }\n        console.log(date);\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    render() {\n\n        let cards = this.props.reservations.map((val, key) => {\n            return (\n                <React.Fragment>\n                    <Card style={{ width: '18rem' }} className='col-md-2 m-2'>\n                        <Card.Body>\n                            <Card.Title>hi {val.reservation_date}</Card.Title>\n                            <Card.Text>\n                                {val.reservation_date}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </React.Fragment>\n            )\n        });\n\n\n        return (\n            <div className='App'>\n\n                <Container fluid=\"md\">\n                    <Form>\n\n                        <Row>\n\n                            <Col>\n                                <ThemeProvider\n                                    theme={{\n                                        reactDatepicker: {\n                                            datepickerZIndex : 100000\n                                        }\n                                    }}\n                                >\n                                    <DateRangeInput\n                                        onDatesChange={data => this.props.dateChangeFun(data)}\n                                        onFocusChange={focusedInput => this.props.focusChangeFun(focusedInput)}\n                                        startDate={this.props.startDate} // Date or null\n                                        endDate={this.props.endDate} // Date or null\n                                        focusedInput={this.props.focusedInput} // START_DATE, END_DATE or null\n                                        unavailableDates={[new Date(\"2021-09-18\")]}\n                                    />\n\n                                </ThemeProvider>\n                            </Col>\n                            <Col>\n                                <Button onClick={this.handleChange} variant=\"primary\">\n                                    {\"+\"} Book Room\n                                </Button>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                <Form.Control type=\"text\" size={\"lg\"} placeholder=\"First name\" />\n                            </Col>\n                            <Col>\n                                <Form.Control type=\"text\" size={\"lg\"} placeholder=\"Last name\" />\n                            </Col>\n\n                            <Col>\n                                <Form.Control type=\"text\"  size={\"lg\"} placeholder=\"Email\" />\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const {loading} = state.report;\n    const {startDate} = state.daterange;\n    const {endDate} = state.daterange;\n    const {focusedInput} = state.daterange;\n    const {reservations} = state.report;\n    return {\n        loading,\n        reservations,\n        startDate,\n        endDate,\n        focusedInput\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}