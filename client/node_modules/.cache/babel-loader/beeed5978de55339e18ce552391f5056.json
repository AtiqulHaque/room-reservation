{"ast":null,"code":"import { conversationConstants, userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport axis from \"axis.js\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nexport const userActions = {\n  login,\n  logout,\n  getAll,\n  updateUser,\n  getUserProfile,\n  profilePicLoading,\n  profilePicLoadingDone,\n  loading,\n  loadingDone,\n  getAupairs,\n  getFamilies\n};\n\nfunction login(email, password) {\n  return dispatch => {\n    dispatch(request({\n      username: email\n    }));\n    userService.login(email, password).then(user => {\n      if (!axis.isUndefined(user.status) && user.status === 'validation-error') {\n        dispatch(validationError(user));\n      } else if (!axis.isUndefined(user.status) && user.status === 'error') {\n        dispatch(failure(user));\n      } else {\n        dispatch(success(user));\n        history.push('/');\n      }\n    }, error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function validationError(error) {\n    return {\n      type: userConstants.LOGIN_VALIDATION_ERROR,\n      error\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction updateUser(params) {\n  return dispatch => {\n    dispatch(request());\n    userService.updateUser(params).then(response => {\n      if (!axis.isUndefined(response)) {\n        const {\n          status,\n          payload\n        } = response;\n\n        if (status === \"validation-error\") {\n          NotificationManager.error('Error', payload.c_password[0]);\n        } else if (status === 'success') {\n          NotificationManager.success('Success message', 'Password successfully updated');\n        }\n      }\n\n      dispatch(success(response));\n    }, error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.UPDATE_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.UPDATE_SUCCESS,\n      payload: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.UPDATE_FAILURE,\n      payload: error\n    };\n  }\n}\n\nfunction getUserProfile() {\n  return dispatch => {\n    userService.getUserProfile().then(response => {\n      dispatch(success(response.payload));\n    });\n  };\n\n  function success(users) {\n    return {\n      type: userConstants.GET_PROFILE,\n      payload: users\n    };\n  }\n}\n\nfunction getAupairs(page, query) {\n  return dispatch => {\n    dispatch(loading());\n    userService.getAupairs(page, query).then(response => {\n      dispatch(success(response.payload));\n      dispatch(loadingDone());\n    });\n  };\n\n  function loading() {\n    return {\n      type: userConstants.LOADING\n    };\n  }\n\n  function loadingDone() {\n    return {\n      type: userConstants.LOADING_DONE\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.GET_AUPAIR_SUCCESS,\n      payload: data\n    };\n  }\n}\n\nfunction getFamilies(page, query) {\n  return dispatch => {\n    dispatch(loading());\n    userService.getFamilies(page, query).then(response => {\n      dispatch(success(response.payload));\n      dispatch(loadingDone());\n    });\n  };\n\n  function success(data) {\n    return {\n      type: userConstants.GET_FAMILY_SUCCESS,\n      payload: data\n    };\n  }\n\n  function loading() {\n    return {\n      type: userConstants.LOADING\n    };\n  }\n\n  function loadingDone() {\n    return {\n      type: userConstants.LOADING_DONE\n    };\n  }\n}\n\nfunction profilePicLoading() {\n  return {\n    type: userConstants.PROFILE_PIC_REQUEST\n  };\n}\n\nfunction profilePicLoadingDone() {\n  return {\n    type: userConstants.PROFILE_PIC_SUCCESS\n  };\n}\n\nfunction loading() {\n  return {\n    type: userConstants.LOADING\n  };\n}\n\nfunction loadingDone() {\n  return {\n    type: userConstants.LOADING_DONE\n  };\n}","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/_actions/user.actions.js"],"names":["conversationConstants","userConstants","userService","axis","NotificationContainer","NotificationManager","userActions","login","logout","getAll","updateUser","getUserProfile","profilePicLoading","profilePicLoadingDone","loading","loadingDone","getAupairs","getFamilies","email","password","dispatch","request","username","then","user","isUndefined","status","validationError","failure","success","history","push","error","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_VALIDATION_ERROR","LOGIN_FAILURE","LOGOUT","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","params","response","payload","c_password","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","GET_PROFILE","page","query","LOADING","LOADING_DONE","data","GET_AUPAIR_SUCCESS","GET_FAMILY_SUCCESS","PROFILE_PIC_REQUEST","PROFILE_PIC_SUCCESS"],"mappings":"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","sourcesContent":["import {conversationConstants, userConstants} from '../_constants';\nimport { userService } from '../_services';\nimport axis from \"axis.js\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nexport const userActions = {\n    login,\n    logout,\n    getAll,\n    updateUser,\n    getUserProfile,\n    profilePicLoading,\n    profilePicLoadingDone,\n    loading,\n    loadingDone,\n    getAupairs,\n    getFamilies\n};\n\nfunction login(email, password) {\n    return dispatch => {\n        dispatch(request({ username: email }));\n\n        userService.login(email, password)\n            .then(\n                user => {\n                    if(!axis.isUndefined(user.status) && user.status === 'validation-error'){\n                        dispatch(validationError(user));\n                    } else if(!axis.isUndefined(user.status) && user.status === 'error'){\n                        dispatch(failure(user));\n                    } else{\n                       dispatch(success(user));\n                        history.push('/');\n                    }\n                },\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user }; }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user }; }\n    function validationError(error) { return { type: userConstants.LOGIN_VALIDATION_ERROR, error }; }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error }; }\n}\n\nfunction logout() {\n    return { type: userConstants.LOGOUT };\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST }; }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users }; }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error }; }\n}\n\nfunction updateUser(params) {\n    return dispatch => {\n        dispatch(request());\n\n        userService.updateUser(params)\n            .then(\n                response => {\n                    if (!axis.isUndefined(response)) {\n                        const {status, payload} = response;\n                        if (status === \"validation-error\") {\n                            NotificationManager.error('Error', payload.c_password[0]);\n                        } else if (status === 'success') {\n                            NotificationManager.success('Success message', 'Password successfully updated');\n                        }\n                    }\n                    dispatch(success(response));\n                },\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request() { return { type: userConstants.UPDATE_REQUEST }; }\n    function success(users) { return { type: userConstants.UPDATE_SUCCESS,   payload: users }; }\n    function failure(error) { return { type: userConstants.UPDATE_FAILURE, payload : error }; }\n}\n\nfunction getUserProfile() {\n    return dispatch => {\n        userService.getUserProfile()\n            .then(\n                response => {\n                    dispatch(success(response.payload));\n                }\n            );\n    };\n    function success(users) { return { type: userConstants.GET_PROFILE,   payload: users }; }\n}\nfunction getAupairs(page,query){\n    return dispatch => {\n        dispatch(loading());\n        userService.getAupairs(page,query)\n            .then(\n                response => {\n                    dispatch(success(response.payload));\n                    dispatch(loadingDone());\n                }\n            );\n    };\n    function loading() { return { type: userConstants.LOADING}; }\n    function loadingDone() { return { type: userConstants.LOADING_DONE}; }\n    function success(data) { return { type: userConstants.GET_AUPAIR_SUCCESS,   payload: data }; }\n\n}\nfunction getFamilies(page,query){\n    return dispatch => {\n        dispatch(loading());\n        userService.getFamilies(page,query)\n            .then(\n                response => {\n                    dispatch(success(response.payload));\n                    dispatch(loadingDone());\n                }\n            );\n    };\n    function success(data) { return { type: userConstants.GET_FAMILY_SUCCESS,   payload: data }; }\n    function loading() { return { type: userConstants.LOADING}; }\n    function loadingDone() { return { type: userConstants.LOADING_DONE}; }\n}\nfunction profilePicLoading(){\n    return { type: userConstants.PROFILE_PIC_REQUEST };\n}\nfunction profilePicLoadingDone(){\n    return { type: userConstants.PROFILE_PIC_SUCCESS };\n}\nfunction loading(){\n    return { type: userConstants.LOADING };\n}\nfunction loadingDone(){\n    return { type: userConstants.LOADING_DONE };\n}\n"]},"metadata":{},"sourceType":"module"}