{"ast":null,"code":"import { userConstants } from '../_constants';\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {\n  loggedIn: true,\n  loggingIn: false,\n  user,\n  validationError: false\n} : {\n  validationError: false,\n  loggedIn: false,\n  loggingIn: false,\n  validationErrorMsg: null\n};\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return Object.assign({}, state, {\n        loggingIn: true,\n        user: action.user\n      });\n\n    case userConstants.LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        loggedIn: true,\n        loggingIn: false,\n        user: action.user\n      });\n\n    case userConstants.LOGIN_VALIDATION_ERROR:\n      return Object.assign({}, state, {\n        validationError: true,\n        loggingIn: false,\n        loggedIn: false,\n        validationErrorMsg: action.error.payload\n      });\n\n    case userConstants.LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        validationError: false,\n        loggingIn: false,\n        loggedIn: false\n      });\n\n    case userConstants.LOGOUT:\n      return Object.assign({}, state, {\n        loggedIn: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/_reducers/authentication.reducer.js"],"names":["userConstants","user","JSON","parse","localStorage","getItem","initialState","loggedIn","loggingIn","validationError","validationErrorMsg","authentication","state","action","type","LOGIN_REQUEST","Object","assign","LOGIN_SUCCESS","LOGIN_VALIDATION_ERROR","error","payload","LOGIN_FAILURE","LOGOUT"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,eAA5B;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,MAAMC,YAAY,GAAGL,IAAI,GAAG;AACxBM,EAAAA,QAAQ,EAAE,IADc;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBP,EAAAA,IAHwB;AAGnBQ,EAAAA,eAAe,EAAG;AAHC,CAAH,GAIrB;AACAA,EAAAA,eAAe,EAAG,KADlB;AAEAF,EAAAA,QAAQ,EAAE,KAFV;AAGAC,EAAAA,SAAS,EAAE,KAHX;AAIAE,EAAAA,kBAAkB,EAAG;AAJrB,CAJJ;AAWA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,aAAa,CAACe,aAAnB;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BJ,QAAAA,SAAS,EAAE,IADiB;AAE5BP,QAAAA,IAAI,EAAEY,MAAM,CAACZ;AAFe,OAAzB,CAAP;;AAKJ,SAAKD,aAAa,CAACkB,aAAnB;AACI,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BL,QAAAA,QAAQ,EAAE,IADkB;AAE5BC,QAAAA,SAAS,EAAE,KAFiB;AAG5BP,QAAAA,IAAI,EAAEY,MAAM,CAACZ;AAHe,OAAzB,CAAP;;AAMJ,SAAKD,aAAa,CAACmB,sBAAnB;AACI,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BH,QAAAA,eAAe,EAAE,IADW;AAE5BD,QAAAA,SAAS,EAAE,KAFiB;AAG5BD,QAAAA,QAAQ,EAAE,KAHkB;AAI5BG,QAAAA,kBAAkB,EAAEG,MAAM,CAACO,KAAP,CAAaC;AAJL,OAAzB,CAAP;;AAOJ,SAAKrB,aAAa,CAACsB,aAAnB;AACI,aAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BH,QAAAA,eAAe,EAAE,KADW;AAE5BD,QAAAA,SAAS,EAAE,KAFiB;AAG5BD,QAAAA,QAAQ,EAAE;AAHkB,OAAzB,CAAP;;AAKJ,SAAKP,aAAa,CAACuB,MAAnB;AACI,aAAOP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BL,QAAAA,QAAQ,EAAE;AADkB,OAAzB,CAAP;;AAGJ;AACI,aAAOK,KAAP;AAjCR;AAmCH","sourcesContent":["import {userConstants} from '../_constants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {\n    loggedIn: true,\n    loggingIn: false,\n    user,validationError : false\n} : {\n    validationError : false,\n    loggedIn: false,\n    loggingIn: false,\n    validationErrorMsg : null\n};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                loggingIn: true,\n                user: action.user\n            });\n\n        case userConstants.LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                loggedIn: true,\n                loggingIn: false,\n                user: action.user\n            });\n\n        case userConstants.LOGIN_VALIDATION_ERROR:\n            return Object.assign({}, state, {\n                validationError: true,\n                loggingIn: false,\n                loggedIn: false,\n                validationErrorMsg: action.error.payload\n            });\n\n        case userConstants.LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                validationError: false,\n                loggingIn: false,\n                loggedIn: false\n            });\n        case userConstants.LOGOUT:\n            return Object.assign({}, state, {\n                loggedIn: false,\n            });\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}