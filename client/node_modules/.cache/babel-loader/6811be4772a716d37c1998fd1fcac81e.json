{"ast":null,"code":"var _jsxFileName = \"/home/atiqul/docker-project/room-booking-app/client/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport { Button, Card, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { booking, dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowMessage = ({\n  msg\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messageHolder\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ShowMessage;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadDashBoard: article => dispatch(booking.loadDashboard(article)),\n    dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n    focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput)),\n    bookRoom: data => dispatch(booking.bookRoom(data)),\n    checkAvailable: data => dispatch(booking.checkAvailable(data)),\n    setMessage: data => dispatch(booking.setMessage(data))\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      errors: []\n    };\n  }\n\n  handleInputChange(event) {\n    let key = event.target.name;\n    let value = event.target.value;\n    let obj = {};\n    obj[key] = value;\n    this.setState(obj);\n  }\n\n  handleChange() {}\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //VALIDATE\n\n    var errors = []; //firstname\n\n    if (this.state.firstname === \"\") {\n      errors.push(\"firstname\");\n    } //lastname\n\n\n    if (this.state.lastname === \"\") {\n      errors.push(\"lastname\");\n    } //email\n\n\n    const expression = /\\S+@\\S+/;\n    var validEmail = expression.test(String(this.state.email).toLowerCase());\n\n    if (!validEmail) {\n      errors.push(\"email\");\n    }\n\n    let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n    let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n    let reservation_date = [];\n\n    for (let m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n      reservation_date.push(m.format('YYYY-MM-DD'));\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (errors.length > 0) {\n      return false;\n    } else {\n      if (this.props.isAvailable) {\n        this.props.bookRoom({\n          lastname: this.state.lastname,\n          firstname: this.state.firstname,\n          email: this.state.email,\n          reservation_date: reservation_date\n        });\n      } else {\n        this.props.checkAvailable({\n          reservation_date: reservation_date\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadDashBoard();\n  }\n\n  render() {\n    let mesg = \"\";\n\n    if (this.props.message !== \"\") {\n      this.props.setMessage(\"\");\n      mesg = /*#__PURE__*/_jsxDEV(ShowMessage, {\n        msg: this.props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: [mesg, /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstname\",\n              children: \"CheckIn and CheckOut Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: {\n                reactDatepicker: {\n                  datepickerZIndex: 100000\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n                onDatesChange: data => this.props.dateChangeFun(data),\n                onFocusChange: focusedInput => this.props.focusChangeFun(focusedInput),\n                startDate: this.props.startDate // Date or null\n                ,\n                endDate: this.props.endDate // Date or null\n                ,\n                focusedInput: this.props.focusedInput // START_DATE, END_DATE or null\n                ,\n                unavailableDates: [new Date(\"2021-09-18\")]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              className: this.hasError(\"firstname\") ? \"form-control is-invalid\" : \"form-control\",\n              name: \"firstname\",\n              value: this.state.firstname,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.hasError(\"firstname\") ? \"inline-errormsg\" : \"hidden\",\n              children: \"Please enter a value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              className: this.hasError(\"lastname\") ? \"form-control is-invalid\" : \"form-control\",\n              name: \"lastname\",\n              value: this.state.lastname,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.hasError(\"lastname\") ? \"inline-errormsg\" : \"hidden\",\n              children: \"Please enter a value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              className: this.hasError(\"email\") ? \"form-control is-invalid\" : \"form-control\",\n              name: \"email\",\n              value: this.state.email,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.hasError(\"email\") ? \"inline-errormsg\" : \"hidden\",\n              children: \"Email is invalid or missing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12  padd-top\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: this.handleSubmit,\n              children: this.props.buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    loading\n  } = state.booking;\n  const {\n    startDate\n  } = state.daterange;\n  const {\n    endDate\n  } = state.daterange;\n  const {\n    focusedInput\n  } = state.daterange;\n  const {\n    reservations\n  } = state.booking;\n  const {\n    isAvailable,\n    buttonText,\n    message\n  } = state.booking;\n  return {\n    loading,\n    reservations,\n    startDate,\n    endDate,\n    focusedInput,\n    isAvailable,\n    buttonText,\n    message\n  };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App };\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMessage\");","map":{"version":3,"sources":["/home/atiqul/docker-project/room-booking-app/client/src/components/App.js"],"names":["React","connect","Button","Card","Container","Row","Col","Form","booking","dateRangeActions","DateRangeInput","ThemeProvider","moment","ShowMessage","msg","mapDispatchToProps","dispatch","loadDashBoard","article","loadDashboard","dateChangeFun","data","dateChange","focusChangeFun","focusInput","focusChange","bookRoom","checkAvailable","setMessage","App","Component","constructor","props","handleChange","bind","handleInputChange","handleSubmit","state","firstname","lastname","email","errors","event","key","target","name","value","obj","setState","hasError","indexOf","preventDefault","push","expression","validEmail","test","String","toLowerCase","startDate","format","endDate","reservation_date","m","isSameOrBefore","add","length","isAvailable","componentDidMount","render","mesg","message","reactDatepicker","datepickerZIndex","focusedInput","Date","buttonText","mapStateToProps","loading","daterange","reservations","connectedApp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport 'react-notifications/lib/notifications.css';\nimport {Button, Card, Container, Row,Col, Form} from \"react-bootstrap\";\nimport {booking,dateRangeActions } from \"../_actions\";\nimport \"../styles.css\";\nimport {DateRangeInput} from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport moment from 'moment';\n\n\nconst ShowMessage = ({msg}) => {\n    return (\n        <div className={\"messageHolder\"}>\n            <div className=\"message\">{msg}</div>\n        </div>\n    )\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadDashBoard: article => dispatch(booking.loadDashboard(article)),\n        dateChangeFun: data => dispatch(dateRangeActions.dateChange(data)),\n        focusChangeFun: focusInput => dispatch(dateRangeActions.focusChange(focusInput)),\n        bookRoom: data => dispatch(booking.bookRoom(data)),\n        checkAvailable: data => dispatch(booking.checkAvailable(data)),\n        setMessage: data => dispatch(booking.setMessage(data))\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\",\n            errors: []\n        };\n    }\n\n    handleInputChange(event) {\n        let key = event.target.name;\n        let value = event.target.value;\n        let obj = {};\n        obj[key] = value;\n        this.setState(obj);\n    }\n\n\n    handleChange() {\n\n    }\n\n    hasError(key) {\n        return this.state.errors.indexOf(key) !== -1;\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n\n        //VALIDATE\n        var errors = [];\n\n        //firstname\n        if (this.state.firstname === \"\") {\n            errors.push(\"firstname\");\n        }\n\n        //lastname\n        if (this.state.lastname === \"\") {\n            errors.push(\"lastname\");\n        }\n\n        //email\n        const expression = /\\S+@\\S+/;\n        var validEmail = expression.test(String(this.state.email).toLowerCase());\n\n        if (!validEmail) {\n            errors.push(\"email\");\n        }\n\n\n        let startDate = moment(this.props.startDate).format('YYYY-MM-DD');\n        let endDate = moment(this.props.endDate).format('YYYY-MM-DD');\n        let reservation_date = [];\n\n        for (let m = moment(startDate); m.isSameOrBefore(endDate); m.add(1, 'days')) {\n            reservation_date.push(m.format('YYYY-MM-DD'));\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        if (errors.length > 0) {\n            return false;\n        } else {\n\n            if(this.props.isAvailable){\n                this.props.bookRoom({\n                    lastname : this.state.lastname,\n                    firstname : this.state.firstname,\n                    email : this.state.email ,\n                    reservation_date :reservation_date\n                });\n            } else {\n                this.props.checkAvailable({\n                    reservation_date :reservation_date\n                });\n            }\n\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadDashBoard();\n    }\n\n    render() {\n\n        let mesg = \"\";\n\n        if(this.props.message !== \"\"){\n            this.props.setMessage(\"\");\n            mesg = <ShowMessage msg={this.props.message}/>\n        }\n\n        return (\n            <div className='App'>\n\n                <Container fluid=\"md\">\n\n                   {mesg}\n\n                    <form className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <label htmlFor=\"firstname\">CheckIn and CheckOut Date</label>\n                            <ThemeProvider\n                                theme={{\n                                    reactDatepicker: {\n                                        datepickerZIndex : 100000\n                                    }\n                                }}\n                            >\n                                <DateRangeInput\n                                    onDatesChange={data => this.props.dateChangeFun(data)}\n                                    onFocusChange={focusedInput => this.props.focusChangeFun(focusedInput)}\n                                    startDate={this.props.startDate} // Date or null\n                                    endDate={this.props.endDate} // Date or null\n                                    focusedInput={this.props.focusedInput} // START_DATE, END_DATE or null\n                                    unavailableDates={[new Date(\"2021-09-18\")]}\n                                />\n\n                            </ThemeProvider>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <label htmlFor=\"firstname\">First Name</label>\n                            <input\n                                autoComplete=\"off\"\n                                className={\n                                    this.hasError(\"firstname\")\n                                        ? \"form-control is-invalid\"\n                                        : \"form-control\"\n                                }\n                                name=\"firstname\"\n                                value={this.state.firstname}\n                                onChange={this.handleInputChange}\n                            />\n                            <div\n                                className={\n                                    this.hasError(\"firstname\") ? \"inline-errormsg\" : \"hidden\"\n                                }\n                            >\n                                Please enter a value\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <label htmlFor=\"firstname\">Last Name</label>\n                            <input\n                                autoComplete=\"off\"\n                                className={\n                                    this.hasError(\"lastname\")\n                                        ? \"form-control is-invalid\"\n                                        : \"form-control\"\n                                }\n                                name=\"lastname\"\n                                value={this.state.lastname}\n                                onChange={this.handleInputChange}\n                            />\n                            <div\n                                className={\n                                    this.hasError(\"lastname\") ? \"inline-errormsg\" : \"hidden\"\n                                }\n                            >\n                                Please enter a value\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                autoComplete=\"off\"\n                                className={\n                                    this.hasError(\"email\")\n                                        ? \"form-control is-invalid\"\n                                        : \"form-control\"\n                                }\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange}\n                            />\n                            <div\n                                className={this.hasError(\"email\") ? \"inline-errormsg\" : \"hidden\"}\n                            >\n                                Email is invalid or missing\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-12  padd-top\">\n                            <button className=\"btn btn-success\" onClick={this.handleSubmit}>\n                                {this.props.buttonText}\n                            </button>\n                        </div>\n                    </form>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const {loading} = state.booking;\n    const {startDate} = state.daterange;\n    const {endDate} = state.daterange;\n    const {focusedInput} = state.daterange;\n    const {reservations} = state.booking;\n    const {isAvailable, buttonText, message} = state.booking;\n    return {\n        loading,\n        reservations,\n        startDate,\n        endDate,\n        focusedInput,\n        isAvailable,\n        buttonText,\n        message\n    };\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport {connectedApp as App};\n"]},"metadata":{},"sourceType":"module"}